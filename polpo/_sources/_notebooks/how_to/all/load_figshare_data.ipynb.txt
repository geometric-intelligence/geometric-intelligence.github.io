{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# How to download data from figshare?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Following [How to download data from the server?](load_server_data.ipynb), this notebook shows how to download the same data from [figshare](https://figshare.com/articles/dataset/pregnancy-data/28339535)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from polpo.preprocessing.load.pregnancy.pilot import (\n",
    "    FigsharePregnancyDataLoader,\n",
    "    MriLoader,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/home/luisfpereira/.herbrain/data/pregnancy/mri/ses-01'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SESSION_ID = 1\n",
    "\n",
    "folder_name = f\"ses-{str(SESSION_ID).zfill(2)}\"\n",
    "\n",
    "loader = FigsharePregnancyDataLoader(\n",
    "    data_dir=\"~/.herbrain/data/pregnancy/mri\",\n",
    "    remote_path=f\"mri/{folder_name}\",\n",
    ")\n",
    "\n",
    "loader()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The most general `FigShareDataLoader` could also be used, but `FigsharePregnancyDataLoader` has more guard rails at instantiation."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`MriLoader` conveniently wraps `FigsharePregnancyDataLoader` for the use case shown in this slide. The following is equivalent to the above (except it outputs a `dict`)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{1: '/home/luisfpereira/.herbrain/data/pregnancy/raw/mri/ses-01/BrainNormalizedToTemplate.nii.gz'}"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loader = MriLoader(subset=[SESSION_ID])\n",
    "\n",
    "loader()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Tip: `ppdict.ExtractUniqueKey` if needed!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Further reading\n",
    "\n",
    "* [How to download data from the server?](load_server_data.ipynb)"
   ]
  }
 ],
 "metadata": {
  "docs_topics": [
   "data_loading"
  ],
  "kernelspec": {
   "display_name": "py12",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
